#include "resource.h"
#include <unordered_map>
namespace test {
std::string Resource::string_test() {
    static char const literal[] =  {
        112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 
    };
    return {literal, sizeof(literal)/sizeof(char)};
}
std::string Resource::binary_file_test() {
    static char const literal[] =  {
        49, 50, 51, 10, 49, 50, 51, 10, 
    };
    return {literal, sizeof(literal)/sizeof(char)};
}
std::string Resource::itself() {
    static char const literal[] =  {
        123, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 115, 112, 97, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 104, 101, 97, 100, 101, 114, 34, 32, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 104, 34, 44, 10, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 
        101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 99, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 114, 101, 115, 111, 117, 114, 99, 101, 115, 34, 32, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 115, 116, 114, 105, 110, 103, 95, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 
        114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 115, 116, 114, 105, 110, 103, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 
        98, 105, 110, 97, 114, 121, 95, 102, 105, 108, 101, 95, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 102, 105, 108, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 46, 98, 105, 110, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 
        32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 105, 116, 115, 101, 108, 102, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 102, 105, 108, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 116, 
        101, 115, 116, 46, 106, 115, 111, 110, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 105, 116, 115, 101, 108, 102, 95, 112, 97, 99, 107, 101, 100, 95, 108, 122, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 
        34, 102, 105, 108, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 101, 115, 116, 46, 106, 115, 111, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 34, 32, 58, 32, 34, 76, 90, 52, 72, 67, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 93, 10, 125, 10, 
    };
    return {literal, sizeof(literal)/sizeof(char)};
}
std::string Resource::itself_packed_lz4() {
    static char const literal[] =  {
        0, 119, -65, 5, -125, 2, -14, 12, 123, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 115, 112, 97, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 34, 44, 26, 0, 97, 104, 101, 97, 100, 101, 114, 23, 0, -80, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 34, 0, -76, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 104, 45, 0, 2, 16, 0, 15, 45, 0, 11, 52, 99, 112, 112, 47, 0, 4, 20, 0, 16, 115, 50, 0, 51, 91, 10, 32, 1, 0, 2, 
        -108, 0, 4, 1, 0, 1, -100, 0, 1, 83, 0, 119, 115, 116, 114, 105, 110, 103, 95, -98, 0, 5, 36, 0, 2, 121, 0, 72, 95, 116, 121, 112, 43, 0, 15, 38, 0, 3, 1, 33, 0, -75, 112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 34, 36, 0, 47, 125, 44, -125, 0, 14, -65, 98, 105, 110, 97, 114, 121, 95, 102, 105, 108, 101, -120, 0, 18, 0, 41, 0, 15, -122, 0, 8, 0, 67, 0, 79, 46, 98, 105, 110, -124, 0, 26, 111, 105, 116, 115, 101, 108, 102, 
        122, 0, 49, 63, 106, 115, 111, 123, 0, 33, -65, 95, 112, 97, 99, 107, 101, 100, 95, 108, 122, 52, -122, 0, 40, 9, -123, 0, 11, 35, 0, -79, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 71, 0, 87, 76, 90, 52, 72, 67, -86, 0, -112, 10, 32, 32, 32, 32, 93, 10, 125, 10, 
    };
    return bundle::unpack(std::string(literal, sizeof(literal)/sizeof(char)));
}
std::string Resource::Get(std::string const& key) {
    static std::unordered_map<std::string,ResourceGetter> getters = {
        { "string_test", Resource::string_test },
        { "binary_file_test", Resource::binary_file_test },
        { "itself", Resource::itself },
        { "itself_packed_lz4", Resource::itself_packed_lz4 },
    };
    auto getter = getters.find(key);
    if (getter == getters.end())
         return OnNoKey();
    return getter->second();
}
}
