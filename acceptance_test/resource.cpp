#include "resource.h"
#include <unordered_map>
namespace test {
std::string Resource::string_test() {
    static char const literal[] =  {
        112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::binary_file_test() {
    static char const literal[] =  {
        49, 50, 51, 10, 49, 50, 51, 10, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::itself() {
    static char const literal[] =  {
        123, 10, 9, 34, 110, 97, 109, 101, 115, 112, 97, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 34, 44, 10, 9, 34, 104, 101, 97, 100, 101, 114, 34, 32, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 104, 34, 44, 10, 9, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 
        114, 99, 101, 46, 99, 112, 112, 34, 44, 10, 9, 34, 114, 101, 115, 111, 117, 114, 99, 101, 115, 34, 32, 58, 32, 91, 10, 9, 9, 123, 10, 9, 9, 9, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 115, 116, 114, 105, 110, 103, 95, 116, 101, 115, 116, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 115, 116, 114, 105, 110, 103, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 
        34, 112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 34, 10, 9, 9, 125, 44, 10, 9, 9, 123, 10, 9, 9, 9, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 98, 105, 110, 97, 114, 121, 95, 102, 105, 108, 101, 95, 116, 101, 115, 116, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 102, 105, 108, 101, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 46, 
        98, 105, 110, 34, 10, 9, 9, 125, 44, 10, 9, 9, 123, 10, 9, 9, 9, 34, 110, 97, 109, 101, 34, 32, 58, 32, 34, 105, 116, 115, 101, 108, 102, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 32, 58, 32, 34, 102, 105, 108, 101, 34, 44, 10, 9, 9, 9, 34, 115, 111, 117, 114, 99, 101, 34, 32, 58, 32, 34, 116, 101, 115, 116, 46, 106, 115, 111, 110, 34, 10, 9, 9, 125, 10, 10, 9, 93, 10, 125, 10, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::Get(std::string const& key) {
    static std::unordered_map<std::string,ResourceGetter> getters = {
        { "string_test", Resource::string_test },
        { "binary_file_test", Resource::binary_file_test },
        { "itself", Resource::itself },
    };
    auto getter = getters.find(key);
    if (getter == getters.end())
         return OnNoKey();
    return getter->second();
}
}
